#Way 1
class Solution:
    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:
        res = []
        for i in nums2:
            if i in nums1:
                res.append(i)
                nums1.remove(i)
        return res
#Way 2
class Solution:
    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:
        c1 = Counter(nums1)
        c2 = Counter(nums2)
        c3 = c1 & c2
        return list(c3.elements())
#Way 3
class Solution:
    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:
        res = []
        nums1.sort()
        nums2.sort()
        i = 0
        for num in nums1:
            if i >= len(nums2):
                break
            while i < len(nums2)-1 and nums2[i]<num:
                i += 1
            if nums2[i] == num:
                i += 1
                res.append(num)
        return res


#Way 4
class Solution:
    def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:
        res = []
        freq = defaultdict(int)

        for num in nums1:
            freq[num] += 1
        for num in nums2:
            if num in freq and freq[num]:
                res.append(num)
                freq[num] -= 1
        return res
